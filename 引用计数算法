引用计数算法
算法分析
引用计数是垃圾收集器中的早期策略。在这种方法，堆中每个对象实例都有一个引用参数，当一个对象被创建时，就将该对象实例
分配给一个变量，该变量计数设置为1，当任何其他变量被赋值为这个对象的引用时，技术加1，但当一个对象实例的某个引用超过了
生命周期或者设置为一个新值时，对象实例的引用的计数器减1，任何引用计数器为0的对象实例可以当作垃圾收集。
优点：引用计数收集器可以很快的执行，交织在程序运行中。对程序需要不被长时间打断的实时环境比较有利
缺点：无法检测出循环引用。如父对象有一个对子对象的引用，子对象反过来引用父对象。
这段代码是用来验证引用计数算法不能检测出循环引用。最后面两句将object1和object2赋值为null，也就是说object1和object2指向的
对象已经不可能再被访问，但是由于它们互相引用对方，导致它们的引用计数器都不为0，那么垃圾收集器就永远不会回收它们
public class test {
	public static void main(String[] args){
		MyObject object1=new MyObject();
		MyObject object2=new MyObject();
		object1.object=object2;
		object2.object=object1;
		object1=null;
		object2=null;
	}
}
class MyObject{
	MyObject object;
}
